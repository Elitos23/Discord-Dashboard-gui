[{"D:\\dashb\\test5\\ds-dash\\src\\index.tsx":"1","D:\\dashb\\test5\\ds-dash\\src\\reportWebVitals.ts":"2","D:\\dashb\\test5\\ds-dash\\src\\App.tsx":"3","D:\\dashb\\test5\\ds-dash\\src\\pages\\LoginPage.tsx":"4","D:\\dashb\\test5\\ds-dash\\src\\pages\\MenuPage.tsx":"5","D:\\dashb\\test5\\ds-dash\\src\\pages\\CategoryPage.tsx":"6","D:\\dashb\\test5\\ds-dash\\src\\pages\\WelcomeMessagePage.tsx":"7","D:\\dashb\\test5\\ds-dash\\src\\pages\\GuildPrefixPage.tsx":"8","D:\\dashb\\test5\\ds-dash\\src\\components\\Spinner.tsx":"9","D:\\dashb\\test5\\ds-dash\\src\\components\\AppBar.tsx":"10","D:\\dashb\\test5\\ds-dash\\src\\utils\\contexts\\GuildContext.tsx":"11","D:\\dashb\\test5\\ds-dash\\src\\utils\\hooks\\useFetchUser.tsx":"12","D:\\dashb\\test5\\ds-dash\\src\\components\\GuildMenuItem.tsx":"13","D:\\dashb\\test5\\ds-dash\\src\\utils\\hooks\\useFetchGuilds.tsx":"14","D:\\dashb\\test5\\ds-dash\\src\\utils\\api.ts":"15","D:\\dashb\\test5\\ds-dash\\src\\utils\\styles\\index.tsx":"16","D:\\dashb\\test5\\ds-dash\\src\\utils\\helper.ts":"17","D:\\dashb\\test5\\ds-dash\\src\\utils\\hooks\\useFetchGuildConfig.tsx":"18","D:\\dashb\\test5\\ds-dash\\src\\utils\\hooks\\useWelcomePage.tsx":"19"},{"size":644,"mtime":1673377333821,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1652393818801,"results":"22","hashOfConfig":"21"},{"size":1689,"mtime":1657403450294,"results":"23","hashOfConfig":"21"},{"size":1101,"mtime":1655321658846,"results":"24","hashOfConfig":"21"},{"size":1354,"mtime":1657029289887,"results":"25","hashOfConfig":"21"},{"size":1162,"mtime":1657406380961,"results":"26","hashOfConfig":"21"},{"size":2547,"mtime":1657406464579,"results":"27","hashOfConfig":"21"},{"size":3050,"mtime":1657455910348,"results":"28","hashOfConfig":"21"},{"size":198,"mtime":1655592716077,"results":"29","hashOfConfig":"21"},{"size":666,"mtime":1657030085374,"results":"30","hashOfConfig":"21"},{"size":286,"mtime":1657029043970,"results":"31","hashOfConfig":"21"},{"size":645,"mtime":1657144461841,"results":"32","hashOfConfig":"21"},{"size":494,"mtime":1656977618217,"results":"33","hashOfConfig":"21"},{"size":656,"mtime":1656974961821,"results":"34","hashOfConfig":"21"},{"size":1502,"mtime":1657451438059,"results":"35","hashOfConfig":"21"},{"size":4351,"mtime":1655592045589,"results":"36","hashOfConfig":"21"},{"size":162,"mtime":1656977588611,"results":"37","hashOfConfig":"21"},{"size":1130,"mtime":1657455754384,"results":"38","hashOfConfig":"21"},{"size":959,"mtime":1657230110146,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mtcrlx",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\dashb\\test5\\ds-dash\\src\\index.tsx",[],[],"D:\\dashb\\test5\\ds-dash\\src\\reportWebVitals.ts",[],[],[],"D:\\dashb\\test5\\ds-dash\\src\\App.tsx",["102"],[],"D:\\dashb\\test5\\ds-dash\\src\\pages\\LoginPage.tsx",[],[],"D:\\dashb\\test5\\ds-dash\\src\\pages\\MenuPage.tsx",["103"],[],"import { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { MoonLoader } from 'react-spinners';\r\nimport { GuildMenuItem } from '../components/GuildMenuItem';\r\nimport { GuildContext } from '../utils/contexts/GuildContext';\r\nimport { useFetchGuilds } from '../utils/hooks/useFetchGuilds';\r\nimport { Container, Flex, Page } from '../utils/styles';\r\nimport { PartialGuild } from '../utils/types';\r\n\r\n\r\nexport const MenuPage = () => {\r\n  const navigate = useNavigate();\r\n  const { updateGuild } = useContext(GuildContext);\r\n  const { guilds, loading, error } = useFetchGuilds();\r\n\r\n  const handleClick = (guild: PartialGuild) => {\r\n    updateGuild(guild);\r\n    navigate('/dashboard/categories');\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <Container>\r\n        <h2 style={{ fontWeight: 300 }}>Select a Server</h2>\r\n        <div>\r\n          {loading ? (\r\n            <Flex justifyContent=\"center\">\r\n              <MoonLoader size={40} color=\"white\" />\r\n            </Flex>\r\n          ) : (\r\n            <div>\r\n              {guilds &&\r\n                guilds.map((guild) => (\r\n                  <div onClick={() => handleClick(guild)}>\r\n                    <GuildMenuItem guild={guild} />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n","D:\\dashb\\test5\\ds-dash\\src\\pages\\CategoryPage.tsx",["104"],[],"D:\\dashb\\test5\\ds-dash\\src\\pages\\WelcomeMessagePage.tsx",[],[],"D:\\dashb\\test5\\ds-dash\\src\\pages\\GuildPrefixPage.tsx",[],[],"D:\\dashb\\test5\\ds-dash\\src\\components\\Spinner.tsx",["105"],[],"import { FC } from 'react';\r\nimport { BarLoader } from 'react-spinners';\r\nimport { Overlay } from '../utils/styles';\r\n\r\nexport const Spinner = () => <Overlay><BarLoader color=\"white\" /></Overlay>;\r\n","D:\\dashb\\test5\\ds-dash\\src\\components\\AppBar.tsx",[],[],"D:\\dashb\\test5\\ds-dash\\src\\utils\\contexts\\GuildContext.tsx",[],[],"D:\\dashb\\test5\\ds-dash\\src\\utils\\hooks\\useFetchUser.tsx",["106"],[],"import axios from 'axios'\r\nimport { useEffect, useState } from 'react';\r\nimport { getAuthStatus } from '../api';\r\nimport { User } from '../types';\r\n\r\nexport function  useFetchUser() {\r\nconst [user, setUser] = useState<User>();\r\nconst [error, setError] = useState();\r\nconst [loading, setLoading] = useState(false);\r\n\r\nuseEffect(() => {\r\n  setLoading(true);\r\n  getAuthStatus()\r\n    .then(({ data }) => {\r\n      console.log(data)\r\n      setUser(data);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      setError(err);\r\n    }\r\n  ).finally(() => setTimeout(() => setLoading(false), 100));\r\n}, []);\r\n\r\nreturn { user, error, loading };\r\n}\r\n","D:\\dashb\\test5\\ds-dash\\src\\components\\GuildMenuItem.tsx",[],[],"D:\\dashb\\test5\\ds-dash\\src\\utils\\hooks\\useFetchGuilds.tsx",[],[],"D:\\dashb\\test5\\ds-dash\\src\\utils\\api.ts",[],[],"D:\\dashb\\test5\\ds-dash\\src\\utils\\styles\\index.tsx",[],[],"D:\\dashb\\test5\\ds-dash\\src\\utils\\helper.ts",[],[],"D:\\dashb\\test5\\ds-dash\\src\\utils\\hooks\\useFetchGuildConfig.tsx",["107","108","109","110"],[],"import { useEffect, useState } from \"react\";\r\nimport { getGuildConfig } from \"../api\";\r\nimport { GuildConfigType } from \"../types\";\r\n\r\nexport function useFetchGuildConfig(guildId: string) {\r\n  const [config, setConfig] = useState<GuildConfigType>()\r\n  const [prefix, setPrefix] = useState('');\r\n  const [wlrole, setWlrole] = useState('');\r\n    const [channel, setChannel] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getGuildConfig(guildId)\r\n      .then(({data}) => {\r\n      setConfig(data)\r\n      setChannel(data.channel)\r\n      setWlrole(data.wlrole)\r\n      setPrefix(data.prefix)\r\n\r\n\r\n    }\r\n\r\n      ).catch((err) => {\r\n\r\n        console.log(err)\r\n      setError(err)\r\n     })\r\n      .finally(() => setTimeout(() => setLoading(false), 50))\r\n  }, [])\r\n\r\n  const updatePrefix = (prefix: string ) => {\r\n\r\n  }\r\n  const updateWlrole = (wlrole: string ) => {\r\n\r\n  }\r\n  const updateChannel = (channel: string ) => {\r\n\r\n  }\r\n  return {config, prefix, setPrefix, wlrole, setWlrole, channel, setChannel, loading, error}\r\n}\r\n","D:\\dashb\\test5\\ds-dash\\src\\utils\\hooks\\useWelcomePage.tsx",["111"],[],{"ruleId":"112","severity":1,"message":"113","line":13,"column":10,"nodeType":"114","messageId":"115","endLine":13,"endColumn":19},{"ruleId":"112","severity":1,"message":"116","line":14,"column":28,"nodeType":"114","messageId":"115","endLine":14,"endColumn":33},{"ruleId":"112","severity":1,"message":"117","line":10,"column":9,"nodeType":"114","messageId":"115","endLine":10,"endColumn":14},{"ruleId":"112","severity":1,"message":"118","line":1,"column":10,"nodeType":"114","messageId":"115","endLine":1,"endColumn":12},{"ruleId":"112","severity":1,"message":"119","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":31,"column":6,"nodeType":"122","endLine":31,"endColumn":8,"suggestions":"123"},{"ruleId":"112","severity":1,"message":"124","line":33,"column":9,"nodeType":"114","messageId":"115","endLine":33,"endColumn":21},{"ruleId":"112","severity":1,"message":"125","line":36,"column":9,"nodeType":"114","messageId":"115","endLine":36,"endColumn":21},{"ruleId":"112","severity":1,"message":"126","line":39,"column":9,"nodeType":"114","messageId":"115","endLine":39,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":21,"column":6,"nodeType":"122","endLine":21,"endColumn":8,"suggestions":"127"},"@typescript-eslint/no-unused-vars","'BarLoader' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'guild' is assigned a value but never used.","'FC' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'guildId'. Either include it or remove the dependency array.","ArrayExpression",["128"],"'updatePrefix' is assigned a value but never used.","'updateWlrole' is assigned a value but never used.","'updateChannel' is assigned a value but never used.",["129"],{"desc":"130","fix":"131"},{"desc":"130","fix":"132"},"Update the dependencies array to be: [guildId]",{"range":"133","text":"134"},{"range":"135","text":"134"},[862,864],"[guildId]",[841,843]]