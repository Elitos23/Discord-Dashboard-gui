{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { getGuildChannels, getGuildConfig } from '../api';\nexport function useWelcomePage(guildId) {\n  _s();\n\n  const [config, setConfig] = useState();\n  const [channels, setChannels] = useState();\n  const [selectedChannel, setSelectedChannel] = useState();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    getGuildConfig(guildId).then(_ref => {\n      let {\n        data\n      } = _ref;\n      setConfig(data);\n      setSelectedChannel(data.welcomeChannelId);\n      return getGuildChannels(guildId);\n    }).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      return setChannels(data);\n    }).catch(err => console.log(err)).finally(() => setLoading(false));\n  }, []);\n  return {\n    config,\n    channels,\n    loading,\n    selectedChannel,\n    setSelectedChannel\n  };\n}\n\n_s(useWelcomePage, \"9S+VHgNfRd/H8RJr62BPrCkb8QM=\");","map":{"version":3,"names":["useEffect","useState","getGuildChannels","getGuildConfig","useWelcomePage","guildId","config","setConfig","channels","setChannels","selectedChannel","setSelectedChannel","loading","setLoading","then","data","welcomeChannelId","catch","err","console","log","finally"],"sources":["D:/dashb/test5/ds-dash/src/utils/hooks/useWelcomePage.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getGuildChannels, getGuildConfig } from '../api';\r\nimport { GuildConfigType, PartialGuildChannel } from '../types';\r\n\r\nexport function useWelcomePage(guildId: string) {\r\n  const [config, setConfig] = useState<GuildConfigType>();\r\n  const [channels, setChannels] = useState<PartialGuildChannel[]>();\r\n  const [selectedChannel, setSelectedChannel] = useState<string>();\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getGuildConfig(guildId)\r\n      .then(({ data }) => {\r\n        setConfig(data);\r\n        setSelectedChannel(data.welcomeChannelId);\r\n        return getGuildChannels(guildId);\r\n      })\r\n      .then(({ data }) => setChannels(data))\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  return {\r\n    config,\r\n    channels,\r\n    loading,\r\n    selectedChannel,\r\n    setSelectedChannel,\r\n  };\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,QAAjD;AAGA,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAyC;EAAA;;EAC9C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,EAApC;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;EACA,MAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,EAAtD;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;EACAD,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,IAAD,CAAV;IACAV,cAAc,CAACE,OAAD,CAAd,CACGS,IADH,CACQ,QAAc;MAAA,IAAb;QAAEC;MAAF,CAAa;MAClBR,SAAS,CAACQ,IAAD,CAAT;MACAJ,kBAAkB,CAACI,IAAI,CAACC,gBAAN,CAAlB;MACA,OAAOd,gBAAgB,CAACG,OAAD,CAAvB;IACD,CALH,EAMGS,IANH,CAMQ;MAAA,IAAC;QAAEC;MAAF,CAAD;MAAA,OAAcN,WAAW,CAACM,IAAD,CAAzB;IAAA,CANR,EAOGE,KAPH,CAOUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPlB,EAQGG,OARH,CAQW,MAAMR,UAAU,CAAC,KAAD,CAR3B;EASD,CAXQ,EAWN,EAXM,CAAT;EAaA,OAAO;IACLP,MADK;IAELE,QAFK;IAGLI,OAHK;IAILF,eAJK;IAKLC;EALK,CAAP;AAOD;;GAzBeP,c"},"metadata":{},"sourceType":"module"}