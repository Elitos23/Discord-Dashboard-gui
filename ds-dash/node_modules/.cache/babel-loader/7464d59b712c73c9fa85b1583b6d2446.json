{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getGuildConfig } from \"../api\";\nexport function useFetchGuildConfig(guildId) {\n  _s();\n\n  const [config, setConfig] = useState();\n  const [prefix, setPrefix] = useState('');\n  const [wlrole, setWlrole] = useState('');\n  const [channel, setChannel] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    setLoading(true);\n    getGuildConfig(guildId).then(_ref => {\n      let {\n        data\n      } = _ref;\n      setConfig(data);\n      setPrefix(data.prefix);\n      setWlrole(data.wlrole);\n      setWlrole(data.channel);\n    }).catch(err => {\n      console.log(err);\n      setError(err);\n    }).finally(() => setTimeout(() => setLoading(false), 50));\n  }, []);\n\n  const updatePrefix = prefix => {};\n\n  const updateWlrole = wlrole => {};\n\n  const updateChannel = wlrole => {};\n\n  return {\n    config,\n    prefix,\n    setPrefix,\n    wlrole,\n    setWlrole,\n    channel,\n    setChannel,\n    loading,\n    error\n  };\n}\n\n_s(useFetchGuildConfig, \"Ix0INeA5t3pxZW1oZD1ZQ4pv6F4=\");","map":{"version":3,"names":["useEffect","useState","getGuildConfig","useFetchGuildConfig","guildId","config","setConfig","prefix","setPrefix","wlrole","setWlrole","channel","setChannel","loading","setLoading","error","setError","then","data","catch","err","console","log","finally","setTimeout","updatePrefix","updateWlrole","updateChannel"],"sources":["D:/dashb/test5/ds-dash/src/utils/hooks/useFetchGuildConfig.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getGuildConfig } from \"../api\";\r\nimport { GuildConfigType } from \"../types\";\r\n\r\nexport function useFetchGuildConfig(guildId: string) {\r\n  const [config, setConfig] = useState<GuildConfigType>()\r\n  const [prefix, setPrefix] = useState('');\r\n  const [wlrole, setWlrole] = useState('');\r\n    const [channel, setChannel] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getGuildConfig(guildId)\r\n      .then(({data}) => {\r\n      setConfig(data)\r\n      setPrefix(data.prefix)\r\n      setWlrole(data.wlrole)\r\n      setWlrole(data.channel)\r\n    }\r\n\r\n      ).catch((err) => {\r\n\r\n        console.log(err)\r\n      setError(err)\r\n     })\r\n      .finally(() => setTimeout(() => setLoading(false), 50))\r\n  }, [])\r\n\r\n  const updatePrefix = (prefix: string ) => {\r\n\r\n  }\r\n  const updateWlrole = (wlrole: string ) => {\r\n\r\n  }\r\n  const updateChannel = (wlrole: string ) => {\r\n\r\n  }\r\n  return {config, prefix, setPrefix, wlrole, setWlrole, channel, setChannel, loading, error}\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,QAA/B;AAGA,OAAO,SAASC,mBAAT,CAA6BC,OAA7B,EAA8C;EAAA;;EACnD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,EAApC;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;EACE,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;EACF,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,EAAlC;EAEAD,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,IAAD,CAAV;IACAZ,cAAc,CAACE,OAAD,CAAd,CACGa,IADH,CACQ,QAAY;MAAA,IAAX;QAACC;MAAD,CAAW;MAClBZ,SAAS,CAACY,IAAD,CAAT;MACAV,SAAS,CAACU,IAAI,CAACX,MAAN,CAAT;MACAG,SAAS,CAACQ,IAAI,CAACT,MAAN,CAAT;MACAC,SAAS,CAACQ,IAAI,CAACP,OAAN,CAAT;IACD,CAND,EAQIQ,KARJ,CAQWC,GAAD,IAAS;MAEfC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACFJ,QAAQ,CAACI,GAAD,CAAR;IACA,CAZF,EAaGG,OAbH,CAaW,MAAMC,UAAU,CAAC,MAAMV,UAAU,CAAC,KAAD,CAAjB,EAA0B,EAA1B,CAb3B;EAcD,CAhBQ,EAgBN,EAhBM,CAAT;;EAkBA,MAAMW,YAAY,GAAIlB,MAAD,IAAqB,CAEzC,CAFD;;EAGA,MAAMmB,YAAY,GAAIjB,MAAD,IAAqB,CAEzC,CAFD;;EAGA,MAAMkB,aAAa,GAAIlB,MAAD,IAAqB,CAE1C,CAFD;;EAGA,OAAO;IAACJ,MAAD;IAASE,MAAT;IAAiBC,SAAjB;IAA4BC,MAA5B;IAAoCC,SAApC;IAA+CC,OAA/C;IAAwDC,UAAxD;IAAoEC,OAApE;IAA6EE;EAA7E,CAAP;AACD;;GApCeZ,mB"},"metadata":{},"sourceType":"module"}