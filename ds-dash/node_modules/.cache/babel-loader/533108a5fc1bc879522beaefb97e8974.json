{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getGuildConfig } from \"../api\";\nexport function useFetchGuildConfig(guildId) {\n  _s();\n\n  const [config, setConfig] = useState();\n  const [prefix, setPrefix] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    setLoading(true);\n    getGuildConfig(guildId).then(_ref => {\n      let {\n        data\n      } = _ref;\n      setConfig(data);\n      setPrefix(data.prefix);\n    }).catch(err => {\n      console.log(err);\n      setError(err);\n    }).finally(() => setTimeout(() => setLoading(false), 50));\n  }, []);\n\n  const updatePrefix = prefix => {};\n\n  return {\n    config,\n    prefix,\n    setPrefix,\n    loading,\n    error\n  };\n}\n\n_s(useFetchGuildConfig, \"XXqzaGCcYrbem27eIMRUK85XSUE=\");","map":{"version":3,"names":["useEffect","useState","getGuildConfig","useFetchGuildConfig","guildId","config","setConfig","prefix","setPrefix","loading","setLoading","error","setError","then","data","catch","err","console","log","finally","setTimeout","updatePrefix"],"sources":["D:/dashb/test5/ds-dash/src/utils/hooks/useFetchGuildConfig.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getGuildConfig } from \"../api\";\r\nimport { GuildConfigType } from \"../types\";\r\n\r\nexport function useFetchGuildConfig(guildId: string) {\r\n  const [config, setConfig] = useState<GuildConfigType>()\r\n  const [prefix, setPrefix] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getGuildConfig(guildId)\r\n      .then(({data}) => {setConfig(data)\r\n      setPrefix(data.prefix)}\r\n\r\n      ).catch((err) => {\r\n\r\n        console.log(err)\r\n      setError(err)\r\n     })\r\n      .finally(() => setTimeout(() => setLoading(false), 50))\r\n  }, [])\r\n\r\n  const updatePrefix = (prefix: string ) => {\r\n\r\n  }\r\n  return {config, prefix, setPrefix, loading, error}\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,QAA/B;AAGA,OAAO,SAASC,mBAAT,CAA6BC,OAA7B,EAA8C;EAAA;;EACnD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,EAApC;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;EAEAD,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,IAAD,CAAV;IACAR,cAAc,CAACE,OAAD,CAAd,CACGS,IADH,CACQ,QAAY;MAAA,IAAX;QAACC;MAAD,CAAW;MAACR,SAAS,CAACQ,IAAD,CAAT;MACnBN,SAAS,CAACM,IAAI,CAACP,MAAN,CAAT;IAAuB,CAFzB,EAIIQ,KAJJ,CAIWC,GAAD,IAAS;MAEfC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACFJ,QAAQ,CAACI,GAAD,CAAR;IACA,CARF,EASGG,OATH,CASW,MAAMC,UAAU,CAAC,MAAMV,UAAU,CAAC,KAAD,CAAjB,EAA0B,EAA1B,CAT3B;EAUD,CAZQ,EAYN,EAZM,CAAT;;EAcA,MAAMW,YAAY,GAAId,MAAD,IAAqB,CAEzC,CAFD;;EAGA,OAAO;IAACF,MAAD;IAASE,MAAT;IAAiBC,SAAjB;IAA4BC,OAA5B;IAAqCE;EAArC,CAAP;AACD;;GAxBeR,mB"},"metadata":{},"sourceType":"module"}